<?php
/**
 * Copyright Â© 2016 Magento. All rights reserved.
 * See COPYING.txt for license details.
 */

// @codingStandardsIgnoreFile

?>
<div class="row credit-dashboard-top" data-mage-init='{"loader": {}}'>
    <div class="col-xs-3 credit-amount">
        <!-- small box -->
        <div class="small-box bg-red">
            <div class="inner">
                <h3><?php echo $block->formatPrice($block->getCreditAmount())?></h3>
                <p><?php echo __("Credit Amount")?></p>
            </div>
            <div class="credit-icon">
                <i class="credit-ion credit-ion-card"></i>
            </div>
        </div>
    </div>
    
    <div class="col-xs-3 lifetime-sales">
        <!-- small box -->
        <div class="small-box bg-yellow">
            <div class="inner">
              <h3><?php echo $block->formatPrice($block->getLifetimeSales())?></h3>
              <p><?php echo __("Lifetime Sales")?></p>
            </div>
            <div class="credit-icon">
                <i class="credit-ion credit-ion-bag"></i>
            </div>
        </div>
    </div>
    
    <div class="col-xs-3 average-orders">
        <!-- small box -->
        <div class="small-box bg-olive">
            <div class="inner">
              <h3><?php echo $block->formatPrice($block->getAverageOrders())?></h3>
              <p><?php echo __("Average Orders")?></p>
            </div>
            <div class="credit-icon">
                <i class="credit-ion credit-ion-shoppingcart"></i>
            </div>
        </div>
    </div>
    
    <div class="col-xs-3 total-products">
        <!-- small box -->
        <div class="small-box bg-purple">
            <div class="inner">
              <h3><?php echo $block->getTotalProducts()?></h3>
              <p><?php echo __("Total Products")?></p>
            </div>
            <div class="credit-icon">
                <i class="credit-ion credit-ion-person"></i>
            </div>
        </div>
    </div>
</div>

<div class="row">    
    <div class="col-xs-12">
        <div class="credit-box">
            <div class="credit-box-header with-border">
                <select class="admin__control-select credit-transaction-period" onchange="changeDiagramsPeriod(this.value);" id="transaction_period" name="period">
                    <option value="24h"><?php echo __("Last 24 Hours")?></option>
                    <option value="7d"><?php echo __("Last 7 Days")?></option>
                    <option value="1m"><?php echo __("Current Month")?></option>
                    <option value="1y"><?php echo __("YTD")?></option>
                    <option value="2y"><?php echo __("2YTD")?></option>
                </select>
                <div style="clear: both;"></div>
            </div>
            <div class="credit-box-body graph-tabs">
                <?php echo $this->getChildHtml('graph_tabs')?>
                <div id="vendor_dashboard_graph_content"></div>
            </div>
        </div>
        <div class="credit-box seller-state-tabs">
            <?php echo $this->getChildHtml('seller_state_tabs');?>
            <div id="vendor_dashboard_seller_state_content"></div>
        </div>
    </div>
</div>

<script>
var URL_GRAPH = '<?php echo $block->getUrl('vendors/dashboard/graph')?>';
require([
     "jquery",
     "loader",
     "jquery/ui",
     'jquery/chartjs',
     'jquery/raphael',
     'jquery/morris'
 ], function($,loader){
    /* Morris.js Charts */
    // Sales chart    
    
    function changeDiagramsPeriod(value){
    	var graphContainer = $('#vendor_dashboard_graph_content');
    	graphContainer.trigger('processStart');
        
        var xLabels = getChartXLabels(value);
    	$.ajax({
      		  url: URL_GRAPH,
      		  method: "POST",
      		  data: { period : value ,vendor_id:<?php echo $block->getVendor()->getId()?>},
      		  dataType: "json"
  		}).done(function( response ){
  	  	  	graphContainer.trigger('processStop');
  	  	  	if(response.ajaxExpired){
  	  	  	  	window.location = response.ajaxRedirect;
  	  	  	  	return;
  	  	  	}
  	  	  	window.ves_chart_data = response;
  	  	  	drawTransactionChart(response.transaction_chart, xLabels);
  	  	  	drawOrdersChart(response.order_chart, xLabels);
  	  	  	drawAmountsChart(response.amount_chart,xLabels)
  	  	  	
  		});
    }
    /*Get chart XLabels*/
    function getChartXLabels(value){
        if(typeof(value) == 'undefined') value = $("#transaction_period").val();
    	var xLabels = '';
        switch(value){
        case '24h':
            xLabels = 'hour';
            break;
        case '7d':
        case '1m':
            xLabels = 'day';
            break;
        case '1y':
        case '2y':
            xLabels = 'month';
            break;
        }

        return xLabels;
    }

    /*Draw transaction chart*/
    function drawTransactionChart(data, xLabels){
    	$('#transaction-chart').html('');
    	if(data.size()){
        	Morris.Line({
                element: 'transaction-chart',
                resize: true,
                parseTime: true,
                xLabels: xLabels,
                data: data,
                xkey: 'y',
                ykeys: ['received', 'spent'],
                labels: ['Credits Received', 'Credits Spent'],
                lineColors: ['#3C8DBC', '#F56954'],
                hideHover: 'auto'
    	    });
    	}else{
    		$('#transaction-chart').html('<div class="dashboard-diagram-nodata"><span>No Data Found</span></div>')
    	}
    }

    /*Draw order chart*/
    function drawOrdersChart(data, xLabels){
    	$('#orders-chart').html('');
    	if(data.size()){
        	Morris.Area({
                element: 'orders-chart',
                resize: true,
                parseTime: true,
                xLabels: xLabels,
                data: data,
                xkey: 'y',
                ykeys: ['order_num'],
                labels: ['Orders'],
                lineColors: ['#3C8DBC'],
                hideHover: 'auto'
    	    });
    	}else{
    		$('#orders-chart').html('<div class="dashboard-diagram-nodata"><span>No Data Found</span></div>')
    	}
    }

    /*Draw order chart*/
    function drawAmountsChart(data, xLabels){
    	$('#amounts-chart').html('');
    	if(data.size()){
        	Morris.Area({
                element: 'amounts-chart',
                resize: true,
                parseTime: true,
                xLabels: xLabels,
                data: data,
                xkey: 'y',
                ykeys: ['amount'],
                labels: ['Amounts'],
                lineColors: ['#F56954'],
                hideHover: 'auto'
    	    });
    	}else{
    		$('#orders-chart').html('<div class="dashboard-diagram-nodata"><span>No Data Found</span></div>')
    	}
    }
    
    $( document ).ready(function() {
        setTimeout(function(){
        	changeDiagramsPeriod($("#transaction_period").val());
        }, 1000);
    });
    
    $('#vendor_dashboard_graph').on("tabsactivate", function(event, ui) {
    	var xLabels = getChartXLabels();
        drawTransactionChart(window.ves_chart_data.transaction_chart,xLabels);
        drawOrdersChart(window.ves_chart_data.order_chart,xLabels);
        drawAmountsChart(window.ves_chart_data.amount_chart,xLabels);
    });
    
    $('#vendor_dashboard_sellerstate').on("tabsbeforeload", function(event, ui) {
    	var newPanel = $(ui.panel);
    	newPanel.trigger('processStart');
    });
    $('#vendor_dashboard_sellerstate').on("tabsload", function(event, ui) {
    	var panel = $(ui.panel);
        panel.trigger('processStop');
    });
    
    window.changeDiagramsPeriod = changeDiagramsPeriod;
    window.drawTransactionChart = drawTransactionChart;
    window.drawOrdersChart = drawOrdersChart;
    window.drawAmountsChart = drawAmountsChart;
    window.getChartXLabels = getChartXLabels;
});
</script>